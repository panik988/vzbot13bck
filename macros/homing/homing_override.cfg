[respond]

[gcode_macro _Probe_Variables]
variable_probe_attached:            False
variable_probe_state:               False
variable_probe_lock:                False
variable_z_endstop_x:               0
variable_z_endstop_y:               0
gcode:

#################
# Homing Override
[homing_override]
axes: xyz
gcode:

    POWER_ON_XYMOTORS

    # collect user state variables
    _USER_VARIABLES
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set safe_z = printer["gcode_macro _USER_VARIABLES"].safe_z|float %}
    # Safe Z for travel
    {% set safe_z = printer["gcode_macro _USER_VARIABLES"].safe_z %}
    {% set enable_z_hop = printer["gcode_macro _USER_VARIABLES"].enable_z_hop %}
    {% set kinematic_z = 0 %}
    {% set dock_on_zhome = printer["gcode_macro _USER_VARIABLES"].dock_on_zhome|default(True) %}
    {% set attachmove_x = printer["gcode_macro _USER_VARIABLES"].attachmove_x|default(0) %}
    {% set attachmove_y = printer["gcode_macro _USER_VARIABLES"].attachmove_y|default(0) %}
    {% set attachmove_z = printer["gcode_macro _USER_VARIABLES"].attachmove_z|default(0) %}
    {% set z_drop_feedrate = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
    {% set travel_feedrate = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set home_backoff_x = printer["gcode_macro _USER_VARIABLES"].home_backoff_x|default(0) %}
    {% set home_backoff_y = printer["gcode_macro _USER_VARIABLES"].home_backoff_y|default(0) %}
    {% set override_homing = printer["gcode_macro _USER_VARIABLES"].override_homing|default('') %}

    #checks if the variable definitions are up to date
    _klicky_check_variables_version

    _CheckProbe action=query

    # reset parameters
    {% set home_x, home_y, home_z, leave_probe_attached = False, False, False, False %}

    {% if 'PROBE_LOCK' in params%}
        {% if verbose %}
            { action_respond_info("PROBE_LOCK = True") }
        {% endif %}
        {% set leave_probe_attached = True %}
    {% endif %}

    # which axes have been requested for homing
    {% if not 'X' in params
        and not 'Y' in params
        and not 'Z' in params %}

        {% set home_x, home_y, home_z = True, True, True %}
        _KlickyDebug msg="homing_override goint to home all axes"

    {% else %}
        {% if 'X' in params %}
            {% set home_x = True %}
             _KlickyDebug msg="homing_override goint to home X"

        {% endif %}

        {% if 'Y' in params %}
            {% set home_y = True %}
            _KlickyDebug msg="homing_override goint to home Y"
        {% endif %}

        {% if 'Z' in params %}
            {% set home_z = True %}
            _KlickyDebug msg="homing_override goint to home Z"
        {% endif %}

        {% if 'X' in params
          and 'Y' in params
          and 'Z' in params %}
            # reset homing state variables
            # if homing all axes
            _Homing_Variables reset=1
            _KlickyDebug msg="homing_override goint to home all axes"
         {% endif %}

    {% endif %}

    _entry_point function=homing_override
    _KLICKY_STATUS_HOMING

    # if Z is not homed, do not move the bed if it goes down
    {% if 'z' not in printer.toolhead.homed_axes %}
         {% if not enable_z_hop %} # Disables safe_z
            _KlickyDebug msg="homing_override z_hop disabled"
            #preserve safe_z to use as the SET KINEMATIC Z position, so that the toolhead does not move to pick up the probe
            {% set kinematic_z = safe_z %}
            {% set safe_z = 0 %}
        {% endif %}
    {% endif %}

    #On the first G28 after motors losing power, moves the Z to safe_z distance, if z_hop is enabled
    {% if 'x' not in printer.toolhead.homed_axes and 'y' not in printer.toolhead.homed_axes and 'z' not in printer.toolhead.homed_axes%}
        {% if verbose %}
            { action_respond_info("No axis homed") }
        {% endif %}
        _KlickyDebug msg="homing_override no axis homed, setting position as X=Y=0 Z={kinematic_z}"
        SET_KINEMATIC_POSITION X=0 Y=0 Z={kinematic_z}
        M400
        _KlickyDebug msg="homing_override moving toolhead to {safe_z}mm from {printer.toolhead.position.z}mm"
        {% if verbose %}
            { action_respond_info("moving to a safe Z distance") }
        {% endif %}
        G0 Z{safe_z} F{z_drop_feedrate}
        _KlickyDebug msg="homing_override clearing axis homed state"
        M84
    {% endif %}

    {% if home_z %}
        {% if 'x' not in printer.toolhead.homed_axes and 'y' not in printer.toolhead.homed_axes%}
            {% if verbose %}
                { action_respond_info("X or Y not homed, forcing full G28") }
            {% endif %}
            {% set home_x, home_y, home_z = True, True, True %}
        {% endif %}
    {% endif %}

    # if the dock is oriented on the Y, first do Y endstop
    {% if ((attachmove_y == 0 and override_homing == '' ) or (override_homing == 'Y'))%}
        # Home y
        {% if home_y %}
            {% if override_homing == 'Y' %}
              _KlickyDebug msg="homing_override Y homing first override, due to override_homing = Y"
            {% else %}
              _KlickyDebug msg="homing_override Y homing first override, due to attachmove_y = 0"
            {% endif %}
            {% if verbose %}
                { action_respond_info("Homing Y") }
            {% endif %}
            {% if printer["gcode_macro _HOME_Y"] is defined %}
                _KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"
                _HOME_Y
            {% else %}
                _KlickyDebug msg="homing_override Homing Y G28 Y0"
                G28 Y0
                # does it need to back away from the home position
                {% if home_backoff_y != 0 %}
                    {% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}
                        _KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop-home_backoff_y|int} F{travel_feedrate}"
                        G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}
                    {% else %}
                        _KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"
                        G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}
                    {%endif %}
                {%endif %}
            {% endif %}
        {% endif %}
        {% set home_y = False %}
    {% endif %}


    # Home x
    {% if home_x %}
        {% if verbose %}
            { action_respond_info("Homing X") }
        {% endif %}
        {% if printer["gcode_macro _HOME_X"] is defined %}
            _KlickyDebug msg="homing_override calling _HOME_X external script to handle the X homing"
            _HOME_X
        {% else %}
            _KlickyDebug msg="homing_override Homing X, G28 X0"
            G28 X0
            # does it need to back away from the home position
            {% if home_backoff_x != 0 %}
                {% if (printer.configfile.settings.stepper_x.position_endstop > (printer.configfile.settings.stepper_x.position_min|default(0) + printer.configfile.settings.stepper_x.position_max)/2) %}
                    _KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}"
                    G0 X{printer.configfile.settings.stepper_x.position_endstop - home_backoff_x|int} F{travel_feedrate}
                {% else %}
                    _KlickyDebug msg="homing_override backing off X endstop, G0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}"
                    G0 X{printer.configfile.settings.stepper_x.position_endstop + home_backoff_x|int} F{travel_feedrate}
                {%endif %}
            {%endif %}
        {% endif %}
    {% endif %}

    # Home y
    {% if home_y %}
        {% if verbose %}
            { action_respond_info("Homing Y") }
        {% endif %}
        {% if printer["gcode_macro _HOME_Y"] is defined %}
            _KlickyDebug msg="homing_override calling _HOME_Y external script to handle the Y homing"
            _HOME_Y
        {% else %}
          _KlickyDebug msg="homing_override Homing Y, G28 Y0"
            G28 Y0
            {% if home_backoff_y != 0 %}
                {% if (printer.configfile.settings.stepper_y.position_endstop > (printer.configfile.settings.stepper_y.position_min|default(0) + printer.configfile.settings.stepper_y.position_max)/2) %}
                    _KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}"
                    G0 Y{printer.configfile.settings.stepper_y.position_endstop - home_backoff_y|int} F{travel_feedrate}
                {% else %}
                    _KlickyDebug msg="homing_override backing off Y endstop, G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}"
                    G0 Y{printer.configfile.settings.stepper_y.position_endstop + home_backoff_y|int} F{travel_feedrate}
                {%endif %}
            {%endif %}
        {% endif %}
    {% endif %}
    # Home z
    {% if home_z %}
        {% if verbose %}
            { action_respond_info("Homing Z") }
        {% endif %}

        # if probe is configured as endstop, attach it, else check if the probe needs to be docked if attached
        {% if 'z_virtual_endstop' in printer['configfile'].config["stepper_z"]["endstop_pin"] %}
            _KlickyDebug msg="homing_override probe configured as a virtual Z endstop attaching probe"
            Attach_Probe
            # if PROBE_LOCK parameter is given, Attach Probe and lock until it´s unlocked
            {% if leave_probe_attached %}
                _Probe_Lock
            {% endif %}
        {% elif dock_on_zhome == True %}
            Dock_Probe
        {% endif %}

        _Home_Z

        # if probe is configured as endstop, dock it
        {% if 'z_virtual_endstop' in printer['configfile'].config["stepper_z"]["endstop_pin"] %}
            _KlickyDebug msg="homing_override probe no longer required, docking probe"
            Dock_Probe
        {% elif dock_on_zhome == False %}
            Dock_Probe
        {% endif %}
    {% endif %}
    _CheckProbe action=query

    # park the toolhead
    _Park_Toolhead

    _exit_point function=homing_override
    _KLICKY_STATUS_READY

# Umbilical path setup
[gcode_macro _Umbilical_Path]
gcode:
    {% set umbilical = printer["gcode_macro _USER_VARIABLES"].umbilical %}
    {% set umbilical_x = printer["gcode_macro _USER_VARIABLES"].umbilical_x %}
    {% set umbilical_y = printer["gcode_macro _USER_VARIABLES"].umbilical_y %}
    {% set safe_z = printer["gcode_macro _USER_VARIABLES"].safe_z|float %}
    {% set travel_feedrate = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    {% if umbilical %}
        # Used to give the umbilical a better path to follow and coil properly if dock is tight in space
        _entry_point function=Umbilical_Path

        _KlickyDebug msg="_Umbilical_Path moving to G0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}"
        G0 X{umbilical_x} Y{umbilical_y} Z{safe_z} F{travel_feedrate}

        _exit_point function=Umbilical_Path
    {% endif %}


# Home Z Routine
[gcode_macro _Home_Z]
gcode:
    {% set z_endstop_x = printer["gcode_macro _Probe_Variables"].z_endstop_x %}
    {% set z_endstop_y = printer["gcode_macro _Probe_Variables"].z_endstop_y %}
    {% set safe_z = printer["gcode_macro _USER_VARIABLES"].safe_z|float %}
    {% set travel_feedrate = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}    {% set z_drop_feedrate = printer["gcode_macro _USER_VARIABLES"].z_drop_speed * 60 %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    _entry_point function=Home_Z

    # if x and y are not homed yet, raise error
    {% if not 'xy' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home X and Y Axis First!") }
    {% else %}
        _KlickyDebug msg="_Home_Z XY Axis homed"
        {% if not 'z' in printer.toolhead.homed_axes %}
            {% if verbose %}
                { action_respond_info("Resetting Z position to zero") }
            {% endif %}
             _KlickyDebug msg="_Home_Z Z not homed, setting position as X=Y=Z=0"
            SET_KINEMATIC_POSITION Z=0
        {% endif %}

        # Move tool to safe homing position and home Z axis
        # location of z endstop
        _KlickyDebug msg="_Home_Z moving to Z endstop position G0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}"
        G0 X{z_endstop_x} Y{z_endstop_y} F{travel_feedrate}
        _KlickyDebug msg="_Home_Z Homing Z G28 Z"
        G28 Z0
        _KlickyDebug msg="_Home_Z toolhead too low, raising it to {safe_z}mm from {printer.toolhead.position.z}mm"
        G0 Z{safe_z} F{z_drop_feedrate}
    {% endif %}

    _exit_point function=Home_Z